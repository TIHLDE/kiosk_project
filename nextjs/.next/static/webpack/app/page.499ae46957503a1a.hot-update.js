"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/display-cards/subway.tsx":
/*!*************************************************!*\
  !*** ./src/components/display-cards/subway.tsx ***!
  \*************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/*#__PURE__*/ \n(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n    controls: true,\n    width: \"933\",\n    height: \"525\",\n    className: \"rounded-lg shadow-lg max-w-full\",\n    children: [\n        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n            src: \"/path-to-your-video.mp4\",\n            type: \"video/mp4\"\n        }, void 0, false, {\n            fileName: \"/home/mateo/Documents/Git/kiost_project/nextjs/src/components/display-cards/subway.tsx\",\n            lineNumber: 7,\n            columnNumber: 11\n        }, undefined),\n        \"Your browser does not support the video tag.\"\n    ]\n}, void 0, true, {\n    fileName: \"/home/mateo/Documents/Git/kiost_project/nextjs/src/components/display-cards/subway.tsx\",\n    lineNumber: 1,\n    columnNumber: 1\n}, undefined);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2Rpc3BsYXktY2FyZHMvc3Vid2F5LnRzeCIsIm1hcHBpbmdzIjoiOzs7QUFBQSw4REFBQ0E7SUFDU0MsUUFBUTtJQUNSQyxPQUFNO0lBQ05DLFFBQU87SUFDUEMsV0FBVTs7c0JBRVYsOERBQUNDO1lBQU9DLEtBQUk7WUFBMEJDLE1BQUs7Ozs7OztRQUFjIiwic291cmNlcyI6WyIvaG9tZS9tYXRlby9Eb2N1bWVudHMvR2l0L2tpb3N0X3Byb2plY3QvbmV4dGpzL3NyYy9jb21wb25lbnRzL2Rpc3BsYXktY2FyZHMvc3Vid2F5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyI8dmlkZW9cbiAgICAgICAgICBjb250cm9sc1xuICAgICAgICAgIHdpZHRoPVwiOTMzXCJcbiAgICAgICAgICBoZWlnaHQ9XCI1MjVcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cInJvdW5kZWQtbGcgc2hhZG93LWxnIG1heC13LWZ1bGxcIlxuICAgICAgICA+XG4gICAgICAgICAgPHNvdXJjZSBzcmM9XCIvcGF0aC10by15b3VyLXZpZGVvLm1wNFwiIHR5cGU9XCJ2aWRlby9tcDRcIiAvPlxuICAgICAgICAgIFlvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHRoZSB2aWRlbyB0YWcuXG4gICAgICAgIDwvdmlkZW8+Il0sIm5hbWVzIjpbInZpZGVvIiwiY29udHJvbHMiLCJ3aWR0aCIsImhlaWdodCIsImNsYXNzTmFtZSIsInNvdXJjZSIsInNyYyIsInR5cGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/display-cards/subway.tsx\n"));

/***/ })

});